1.下载代码   
https://github.com/yuzhihuanwanglin/OpenStereo   
分支v2和main两个分支  
v2来自拷贝 ：github.com/XiandaGuo/OpenStereo
main新建修改分支

 
2.安装环境
1）nvidia cuda 环境安装   
11.7是开软指定默认环境   12.8 我的环境  nvidia-smi查看是否成功安装，详细网络搜索安装办法
2）软件依赖环境 
https://github.com/yuzhihuanwanglin/OpenStereo/blob/v2/docs/0.get_started.md  Installation部分
可能缺少python库，已经requirement.txt添加

3.数据准备 
https://github.com/yuzhihuanwanglin/OpenStereo/blob/v2/docs/2.prepare_dataset.md
cfgs/data_basic.py  修改为数据硬盘文件路径，文件大小会非常大，数据集每个都可能几百G

4.模型准备  (模型训练情况下可选)
https://github.com/yuzhihuanwanglin/OpenStereo/blob/v2/docs/1.model_zoo.md



5.模型训练
基于sceneflow数据集的训练
python tools/train.py --cfg_file cfgs/lightstereo/lightstereo_s_sceneflow.yaml     (small)
python tools/train.py --cfg_file cfgs/lightstereo/lightstereo_l_sceneflow.yaml     (large)
python tools/train.py --cfg_file cfgs/lightstereo/lightstereo_lx_sceneflow.yaml    (large*)

cfgs/lightstereo/lightstereo_l_sceneflow.yaml
可能出现超出GPU内存的问题  ：修改BATCH_SIZE_PER_GPU
过拟合nano：   去掉半精度  AMP: false



6. 其他问题：

'NMRF': NMRFTrainer 暂时去掉问题：   stereo/modeling/__init__.py
https://github.com/XiandaGuo/OpenStereo/issues
 


 # insert model autosparsity code before training
import torch
import torchvision.models as models
from autosparsity.sparsity import sparsity_model

...

model = models.resnet34(pretrained=True).cuda()
mode = 0
sparsity_model(model, optimizer, mode)

# normal training
x, y = DataLoader(args)
for epoch in range(epochs):
    y_pred = model(x)
    loss = loss_func(y_pred, y)
    loss.backward()
    optimizer.step()
    ...



| 工具                    | 功能对比                                          |
| --------------------- | --------------------------------------------- |
| **ONNX Simplifier**   | 自动去冗余，常量折叠，形状推导。黑盒式一键优化。                      |
| **onnxoptimizer**     | 官方图优化工具，提供标准 pass（eliminate_nop_transpose 等）。 |
| **onnx-graphsurgeon** | 手动控制粒度的“脚本式图编辑器”，适合自定义算子替换和子图融合。              |
| **TensorRT Parser**   | 消费 ONNX 图生成 CUDA 内核，不编辑图。                     |

工具	          维护者	        优化类型	      支持新算子	自定义能力	     是否推荐给 TensorRT
onnxoptimizer	ONNX 官方	        固定规则	      ❌ 弱	     ❌ 无法自定义	  ⚠️ 一般不推荐
onnx-simplifier	社区（@daquexian）	 高级图优化 + 校验	✅ 强	  ❌ 自动优化	    ✅ 推荐
onnx-graphsurgeon	NVIDIA	       图编辑、子图融合	   ✅ 强	     ✅ 脚本化编辑	   ✅ 强烈推荐

ONNX 模型 → onnx-simplifier → onnx-graphsurgeon 自定义编辑 → TensorRT 编译优化


https://github.com/luchangli03/onnxsim_large_model
https://www.paddlepaddle.org.cn/tutorials/projectdetail/3949129
https://github.com/NVIDIA/TensorRT-Model-Optimizer

PyTorch → cuDNN → CUDA → GPU
ONNX 模型 → TensorRT Parser → 优化 → Engine
Engine 执行时 → 调用 cuDNN / CUDA kernel


https://docs.nvidia.com/







